<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:configurator="http://cocoon.apache.org/schema/configurator"
	xmlns:avalon="http://cocoon.apache.org/schema/avalon"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-2.0.xsd
	http://cocoon.apache.org/schema/configurator 
	http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.1.xsd
	http://code.alibabatech.com/schema/dubbo                           
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://cocoon.apache.org/schema/avalon 
    http://cocoon.apache.org/schema/avalon/cocoon-avalon-1.0.xsd">

	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocations" value="classpath:hibernate.cfg.xml"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 以xml方式管理事务 开始 -->
	<!-- 配置通知：具体增强逻辑 -->
	<tx:advice id="txAcvice">
		<tx:attributes>
			<tx:method name="save*" />
			<tx:method name="update*" />
			<tx:method name="delete*" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置AOP -->
	<aop:config>
		<!-- 配置切点:具体哪些方法要被增强（真正被增强的方法） -->
		<aop:pointcut expression="execution(* cn.itcast.service.*.*(..) )"
			id="cut" />
		<aop:advisor advice-ref="txAcvice" pointcut-ref="cut" />
	</aop:config>
	<!-- 以xml方式管理事务 结束 -->

	<!--提供方应用名称信息，这个相当于起一个名字，我们dubbo管理页面比较清晰是哪个应用暴露出来的 -->
	<dubbo:application name="dubbo_provider"></dubbo:application>
	
	<!--使用zookeeper注册中心暴露服务地址 -->
	<dubbo:registry address="zookeeper://127.0.0.1:2181"
		check="false" subscribe="false" register="">
	</dubbo:registry>
	<dubbo:protocol name="dubbo" port="20886" />
	<!--要暴露的服务接口 -->
	<dubbo:service interface="cn.dubbo.service.ITestService" ref="springservice" />
	<bean id="springservice" class="cn.dubbo.service.impl.TestServiceImpl">
	</bean>

</beans>